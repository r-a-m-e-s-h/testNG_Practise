	TestNG - Next Generation
	
	Selenium - WebApplication automation framework
	
	TestNG is Testing framework , can be used for unit, integration, functional, end to end Testing
	
	Unit Testing -> Developer test his own code before hand overing to QA team  
	
	Selenium, java, TestNG is a combination 
	
	only with java we can't do automation Testing , so we need selenium framework
	
	Likewise TestNG helps to overcome the real time issues. and it have built in functions.
	
	Download TestNG from eclipse-> help-> Eclipse market place ->search TestNG and download it.
	
	Add TestNG to the project rightclick on project -> bulid path -> configure build path -> add library -> select TestNG ->finish -> apply & close
	
	// Topic-1 ( @Test )  
	
	we can run the class by using @test TestNG annotation without using the java main method.
	
	for @test we need to import this package ->org.TestNG.annotation.test
	
	we can run all the testcases at singleshot by using TestNG TestNG.xml file.
	
	// Topic-2 ( Priority )
	
	* if we don't set the priority then the test case will be executed on alphabetical order only
	
	* priority is a keyword , not an annotation.
	
	* priority help us to make the testcase which need to run 1st.
	
	* Default priority for the test case is 0.
	
	* priority support for negative numbers also like -1,-2,-3(here -3 is the 1st priority).
	
	* priority accepts only integer value only.
	
	// Topic-3 ( enable )
	
	* if we want to skip a testcase , then we use enable keyword.
	
	* Enable is a boolean type.
	
	* by Default enable value is true.
	
	* set -> @Test(enable = false) to fail a testcase
	
	* we can use both priority and enable with @Test annotation
	
	//Topic-4 ( Dependency )
	
	* suppose if u have to run 100 testcases at a time but the important key feature method is failing and the application depends on it only 
	
	* for the abobe scenario we need that DependsonMethod
	
	* @Test(dependsOnMethod="highSchool")
	
	* mostly the sub methods depends on the main method only if the main method fail but sub method works , so no use in it
	
	* so we go with DependsOnMethod only 
	
	* for eg: amazon login site is not working but the inner feature working so there is no use in it 
	
	//Topic-5( Suite )
	
	* Suite helps to reduce the time taken for same thing which we do simultaneously, for  that we can give the details in before and after annotations.
	
	* TestNG suite annotations are -> @BeforeSuite -> @BeforeTest -> @Beforeclass -> @Beforemethod -> @Test -> @Aftermethod -> @Afterclass -> @AfterTest -> @AfterSuite
	
	* There 9 annotations in TestNG Suite
	
	* through the TestNG suite we can run all the test cases 
	
	* we can increase the report details by using verbose="2"
	
	* after running the TestNG suite , a test output folder will be created inside that -> we have index.html -> its a test report for our execution.
	
	//Topic-6( Groups )
	
	* Groups - helps us to run the specific test cases only
	
	* we need to use the groups keyword inside the @test annotation -> @Test(groups="Nokia")
	
	* groups have 2 options, one is include and another one is exclude
	
	* we need to declare groups in test class then  in XML Suite 
	 
	* in XML Suite -> declare groups under -> test -> run - > include or exclude
	
	//Topic-7( parameter )
	
	* Paramter annotation help us to pass values to the test case 
	
	* we can define value in TestNG Suite
	
	* TestNG Suite -> test -> <paramter name="" ,value=""></parameter>
	
	*test case -> @parameter("name")
	
	*parameter is a case sensitive, so we should  whart ever the name given in the paramater name in TestNG Suite
	
	//Topic-8(  Parallel Execution)
	
	* TestNG parallel Execution help us to run multiple testcases in single shot
	
	* we can define how many test cases need to run at a time in the thread-count
	
	* TestNG Suite -> suite tag -> parallel="methods" -> thread-count="3"
	
	//Topic-9( Assertion )
	
	*TestNG Assertion help us to compare two data
	
	* we have 2 types of assertions -> Assert(hard assert) and Soft assert
	
	* Assert(hard) fails wont go to next step 
	
	* where as softAssert fails it wont stop the execution. 
	
	
	//Topic-10( Listeners )
	
	* Listeners used to monitor the execution flow of the testing
	
	* we have 3 types of listeners -> Suite Listeners, Test Listeners, method Listeners
	
	* we generally go with test listeners.
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	 
	
	
	
	  
	
	
	
	
 
